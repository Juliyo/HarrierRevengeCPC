                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module game
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _drawAll
                             12 	.globl _updatePlayer
                             13 	.globl _accion
                             14 	.globl _incializarEntities
                             15 	.globl _cpct_waitVSYNC
                             16 	.globl _cpct_isKeyPressed
                             17 	.globl _cpct_scanKeyboard_f
                             18 	.globl _cpct_memset
                             19 	.globl _player
                             20 	.globl _inicializarPantalla
                             21 	.globl _updateUser
                             22 	.globl _play
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;src/game.c:15: void inicializarPantalla(){
                             55 ;	---------------------------------
                             56 ; Function inicializarPantalla
                             57 ; ---------------------------------
   0000                      58 _inicializarPantalla::
                             59 ;src/game.c:17: cpct_clearScreen(0);
   0000 21 00 40      [10]   60 	ld	hl,#0x4000
   0003 E5            [11]   61 	push	hl
   0004 AF            [ 4]   62 	xor	a, a
   0005 F5            [11]   63 	push	af
   0006 33            [ 6]   64 	inc	sp
   0007 26 C0         [ 7]   65 	ld	h, #0xC0
   0009 E5            [11]   66 	push	hl
   000A CDr00r00      [17]   67 	call	_cpct_memset
   000D C9            [10]   68 	ret
   000E                      69 _player:
   000E 64                   70 	.db #0x64	; 100	'd'
   000F 32                   71 	.db #0x32	; 50	'2'
   0010r0E                   72 	.byte (_player + 0)
   0011r0F                   73 	.byte (_player + 1)
   0012r00r00                74 	.dw _g_naves_1
                             75 ;src/game.c:22: void updateUser(){
                             76 ;	---------------------------------
                             77 ; Function updateUser
                             78 ; ---------------------------------
   0014                      79 _updateUser::
                             80 ;src/game.c:24: cpct_scanKeyboard_f();
   0014 CDr00r00      [17]   81 	call	_cpct_scanKeyboard_f
                             82 ;src/game.c:26: if(cpct_isKeyPressed(Key_CursorUp)){
   0017 21 00 01      [10]   83 	ld	hl,#0x0100
   001A CDr00r00      [17]   84 	call	_cpct_isKeyPressed
   001D 7D            [ 4]   85 	ld	a, l
   001E B7            [ 4]   86 	or	a, a
   001F 28 0E         [12]   87 	jr	Z,00110$
                             88 ;src/game.c:27: accion(&player, es_mover, d_up);
   0021 21 01 00      [10]   89 	ld	hl,#0x0001
   0024 E5            [11]   90 	push	hl
   0025 21r0Er00      [10]   91 	ld	hl,#_player
   0028 E5            [11]   92 	push	hl
   0029 CDr00r00      [17]   93 	call	_accion
   002C F1            [10]   94 	pop	af
   002D F1            [10]   95 	pop	af
   002E C9            [10]   96 	ret
   002F                      97 00110$:
                             98 ;src/game.c:28: }else if(cpct_isKeyPressed(Key_CursorDown)){
   002F 21 00 04      [10]   99 	ld	hl,#0x0400
   0032 CDr00r00      [17]  100 	call	_cpct_isKeyPressed
   0035 7D            [ 4]  101 	ld	a,l
   0036 B7            [ 4]  102 	or	a, a
   0037 28 0E         [12]  103 	jr	Z,00107$
                            104 ;src/game.c:29: accion(&player, es_mover, d_down);
   0039 21 01 01      [10]  105 	ld	hl,#0x0101
   003C E5            [11]  106 	push	hl
   003D 21r0Er00      [10]  107 	ld	hl,#_player
   0040 E5            [11]  108 	push	hl
   0041 CDr00r00      [17]  109 	call	_accion
   0044 F1            [10]  110 	pop	af
   0045 F1            [10]  111 	pop	af
   0046 C9            [10]  112 	ret
   0047                     113 00107$:
                            114 ;src/game.c:30: }else if(cpct_isKeyPressed(Key_CursorRight)){
   0047 21 00 02      [10]  115 	ld	hl,#0x0200
   004A CDr00r00      [17]  116 	call	_cpct_isKeyPressed
   004D 7D            [ 4]  117 	ld	a,l
   004E B7            [ 4]  118 	or	a, a
   004F 28 0E         [12]  119 	jr	Z,00104$
                            120 ;src/game.c:31: accion(&player,es_mover,d_right);
   0051 21 01 02      [10]  121 	ld	hl,#0x0201
   0054 E5            [11]  122 	push	hl
   0055 21r0Er00      [10]  123 	ld	hl,#_player
   0058 E5            [11]  124 	push	hl
   0059 CDr00r00      [17]  125 	call	_accion
   005C F1            [10]  126 	pop	af
   005D F1            [10]  127 	pop	af
   005E C9            [10]  128 	ret
   005F                     129 00104$:
                            130 ;src/game.c:32: }else if(cpct_isKeyPressed(Key_CursorLeft)){
   005F 21 01 01      [10]  131 	ld	hl,#0x0101
   0062 CDr00r00      [17]  132 	call	_cpct_isKeyPressed
   0065 7D            [ 4]  133 	ld	a,l
   0066 B7            [ 4]  134 	or	a, a
   0067 C8            [11]  135 	ret	Z
                            136 ;src/game.c:33: accion(&player,es_mover,d_left);
   0068 21 01 03      [10]  137 	ld	hl,#0x0301
   006B E5            [11]  138 	push	hl
   006C 21r0Er00      [10]  139 	ld	hl,#_player
   006F E5            [11]  140 	push	hl
   0070 CDr00r00      [17]  141 	call	_accion
   0073 F1            [10]  142 	pop	af
   0074 F1            [10]  143 	pop	af
   0075 C9            [10]  144 	ret
                            145 ;src/game.c:39: void play(){
                            146 ;	---------------------------------
                            147 ; Function play
                            148 ; ---------------------------------
   0076                     149 _play::
                            150 ;src/game.c:41: inicializarPantalla();
   0076 CDr00r00      [17]  151 	call	_inicializarPantalla
                            152 ;src/game.c:42: incializarEntities();
   0079 CDr00r00      [17]  153 	call	_incializarEntities
                            154 ;src/game.c:45: while(1){
   007C                     155 00102$:
                            156 ;src/game.c:46: updateUser();	
   007C CDr14r00      [17]  157 	call	_updateUser
                            158 ;src/game.c:47: updatePlayer(&player);
   007F 21r0Er00      [10]  159 	ld	hl,#_player
   0082 E5            [11]  160 	push	hl
   0083 CDr00r00      [17]  161 	call	_updatePlayer
   0086 F1            [10]  162 	pop	af
                            163 ;src/game.c:49: cpct_waitVSYNC();
   0087 CDr00r00      [17]  164 	call	_cpct_waitVSYNC
                            165 ;src/game.c:50: drawAll(&player);
   008A 21r0Er00      [10]  166 	ld	hl,#_player
   008D E5            [11]  167 	push	hl
   008E CDr00r00      [17]  168 	call	_drawAll
   0091 F1            [10]  169 	pop	af
   0092 18 E8         [12]  170 	jr	00102$
                            171 	.area _CODE
                            172 	.area _INITIALIZER
                            173 	.area _CABS (ABS)
