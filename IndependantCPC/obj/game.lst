                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module game
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _drawAll
                             12 	.globl _updatePlayer
                             13 	.globl _accion
                             14 	.globl _incializarEntities
                             15 	.globl _cpct_waitVSYNC
                             16 	.globl _cpct_isKeyPressed
                             17 	.globl _cpct_scanKeyboard_f
                             18 	.globl _cpct_memset
                             19 	.globl _player
                             20 	.globl _inicializarPantalla
                             21 	.globl _updateUser
                             22 	.globl _play
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;src/game.c:15: void inicializarPantalla(){
                             55 ;	---------------------------------
                             56 ; Function inicializarPantalla
                             57 ; ---------------------------------
   0000                      58 _inicializarPantalla::
                             59 ;src/game.c:17: cpct_clearScreen(0);
   0000 21 00 40      [10]   60 	ld	hl,#0x4000
   0003 E5            [11]   61 	push	hl
   0004 AF            [ 4]   62 	xor	a, a
   0005 F5            [11]   63 	push	af
   0006 33            [ 6]   64 	inc	sp
   0007 26 C0         [ 7]   65 	ld	h, #0xC0
   0009 E5            [11]   66 	push	hl
   000A CDr00r00      [17]   67 	call	_cpct_memset
   000D C9            [10]   68 	ret
   000E                      69 _player:
   000E 64                   70 	.db #0x64	; 100	'd'
   000F 32                   71 	.db #0x32	; 50	'2'
   0010r0E                   72 	.byte (_player + 0)
   0011r0F                   73 	.byte (_player + 1)
   0012r00r00                74 	.dw _g_naves_1
                             75 ;src/game.c:22: void updateUser(){
                             76 ;	---------------------------------
                             77 ; Function updateUser
                             78 ; ---------------------------------
   0014                      79 _updateUser::
                             80 ;src/game.c:24: cpct_scanKeyboard_f();
   0014 CDr00r00      [17]   81 	call	_cpct_scanKeyboard_f
                             82 ;src/game.c:26: if(cpct_isKeyPressed(Key_CursorUp)){
   0017 21 00 01      [10]   83 	ld	hl,#0x0100
   001A CDr00r00      [17]   84 	call	_cpct_isKeyPressed
   001D 7D            [ 4]   85 	ld	a, l
   001E B7            [ 4]   86 	or	a, a
   001F 28 0E         [12]   87 	jr	Z,00104$
                             88 ;src/game.c:27: accion(&player, es_mover, d_up);
   0021 21 01 00      [10]   89 	ld	hl,#0x0001
   0024 E5            [11]   90 	push	hl
   0025 21r0Er00      [10]   91 	ld	hl,#_player
   0028 E5            [11]   92 	push	hl
   0029 CDr00r00      [17]   93 	call	_accion
   002C F1            [10]   94 	pop	af
   002D F1            [10]   95 	pop	af
   002E C9            [10]   96 	ret
   002F                      97 00104$:
                             98 ;src/game.c:28: }else if(cpct_isKeyPressed(Key_CursorDown)){
   002F 21 00 04      [10]   99 	ld	hl,#0x0400
   0032 CDr00r00      [17]  100 	call	_cpct_isKeyPressed
   0035 7D            [ 4]  101 	ld	a,l
   0036 B7            [ 4]  102 	or	a, a
   0037 C8            [11]  103 	ret	Z
                            104 ;src/game.c:29: accion(&player, es_mover, d_down);
   0038 21 01 01      [10]  105 	ld	hl,#0x0101
   003B E5            [11]  106 	push	hl
   003C 21r0Er00      [10]  107 	ld	hl,#_player
   003F E5            [11]  108 	push	hl
   0040 CDr00r00      [17]  109 	call	_accion
   0043 F1            [10]  110 	pop	af
   0044 F1            [10]  111 	pop	af
   0045 C9            [10]  112 	ret
                            113 ;src/game.c:35: void play(){
                            114 ;	---------------------------------
                            115 ; Function play
                            116 ; ---------------------------------
   0046                     117 _play::
                            118 ;src/game.c:37: inicializarPantalla();
   0046 CDr00r00      [17]  119 	call	_inicializarPantalla
                            120 ;src/game.c:38: incializarEntities();
   0049 CDr00r00      [17]  121 	call	_incializarEntities
                            122 ;src/game.c:41: while(1){
   004C                     123 00102$:
                            124 ;src/game.c:42: updateUser();	
   004C CDr14r00      [17]  125 	call	_updateUser
                            126 ;src/game.c:43: updatePlayer(&player);
   004F 21r0Er00      [10]  127 	ld	hl,#_player
   0052 E5            [11]  128 	push	hl
   0053 CDr00r00      [17]  129 	call	_updatePlayer
   0056 F1            [10]  130 	pop	af
                            131 ;src/game.c:45: cpct_waitVSYNC();
   0057 CDr00r00      [17]  132 	call	_cpct_waitVSYNC
                            133 ;src/game.c:46: drawAll(&player);
   005A 21r0Er00      [10]  134 	ld	hl,#_player
   005D E5            [11]  135 	push	hl
   005E CDr00r00      [17]  136 	call	_drawAll
   0061 F1            [10]  137 	pop	af
   0062 18 E8         [12]  138 	jr	00102$
                            139 	.area _CODE
                            140 	.area _INITIALIZER
                            141 	.area _CABS (ABS)
