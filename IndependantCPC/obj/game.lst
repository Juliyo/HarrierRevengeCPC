                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module game
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _drawAll
                             12 	.globl _updatePlayer
                             13 	.globl _accion
                             14 	.globl _incializarEntities
                             15 	.globl _cpct_etm_setTileset2x4
                             16 	.globl _cpct_etm_drawTileBox2x4
                             17 	.globl _cpct_waitVSYNC
                             18 	.globl _cpct_isAnyKeyPressed
                             19 	.globl _cpct_isKeyPressed
                             20 	.globl _cpct_scanKeyboard_if
                             21 	.globl _cpct_memset
                             22 	.globl _mapa
                             23 	.globl _player
                             24 	.globl _inicializarPantalla
                             25 	.globl _dibujarMapa
                             26 	.globl _updateUser
                             27 	.globl _play
                             28 ;--------------------------------------------------------
                             29 ; special function registers
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DATA
                             35 ;--------------------------------------------------------
                             36 ; ram data
                             37 ;--------------------------------------------------------
                             38 	.area _INITIALIZED
   0000                      39 _mapa::
   0000                      40 	.ds 2
                             41 ;--------------------------------------------------------
                             42 ; absolute external ram data
                             43 ;--------------------------------------------------------
                             44 	.area _DABS (ABS)
                             45 ;--------------------------------------------------------
                             46 ; global & static initialisations
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _GSINIT
                             50 	.area _GSFINAL
                             51 	.area _GSINIT
                             52 ;--------------------------------------------------------
                             53 ; Home
                             54 ;--------------------------------------------------------
                             55 	.area _HOME
                             56 	.area _HOME
                             57 ;--------------------------------------------------------
                             58 ; code
                             59 ;--------------------------------------------------------
                             60 	.area _CODE
                             61 ;src/game.c:23: void inicializarPantalla(){
                             62 ;	---------------------------------
                             63 ; Function inicializarPantalla
                             64 ; ---------------------------------
   0000                      65 _inicializarPantalla::
                             66 ;src/game.c:25: cpct_clearScreen(0);
   0000 21 00 40      [10]   67 	ld	hl,#0x4000
   0003 E5            [11]   68 	push	hl
   0004 AF            [ 4]   69 	xor	a, a
   0005 F5            [11]   70 	push	af
   0006 33            [ 6]   71 	inc	sp
   0007 26 C0         [ 7]   72 	ld	h, #0xC0
   0009 E5            [11]   73 	push	hl
   000A CDr00r00      [17]   74 	call	_cpct_memset
                             75 ;src/game.c:27: mapa = g_map1;
   000D 21r00r00      [10]   76 	ld	hl,#_g_map1+0
   0010 22r00r00      [16]   77 	ld	(_mapa),hl
                             78 ;src/game.c:28: cpct_etm_setTileset2x4(g_tileset);
   0013 21r00r00      [10]   79 	ld	hl,#_g_tileset
   0016 CDr00r00      [17]   80 	call	_cpct_etm_setTileset2x4
                             81 ;src/game.c:29: dibujarMapa();
   0019 CDr25r00      [17]   82 	call	_dibujarMapa
   001C C9            [10]   83 	ret
   001D                      84 _player:
   001D 14                   85 	.db #0x14	; 20
   001E 9D                   86 	.db #0x9D	; 157
   001Fr1D                   87 	.byte (_player + 0)
   0020r1E                   88 	.byte (_player + 1)
   0021 01                   89 	.db #0x01	; 1
   0022r00r00                90 	.dw _g_naves_0
   0024 00                   91 	.db #0x00	; 0
                             92 ;src/game.c:33: void dibujarMapa(){
                             93 ;	---------------------------------
                             94 ; Function dibujarMapa
                             95 ; ---------------------------------
   0025                      96 _dibujarMapa::
                             97 ;src/game.c:34: cpct_etm_drawTilemap2x4(g_map1_W, g_map1_H, ORIGEN_MAPA, mapa);
   0025 2Ar00r00      [16]   98 	ld	hl,(_mapa)
   0028 E5            [11]   99 	push	hl
   0029 21 00 C0      [10]  100 	ld	hl,#0xC000
   002C E5            [11]  101 	push	hl
   002D 21 32 28      [10]  102 	ld	hl,#0x2832
   0030 E5            [11]  103 	push	hl
   0031 2E 00         [ 7]  104 	ld	l, #0x00
   0033 E5            [11]  105 	push	hl
   0034 AF            [ 4]  106 	xor	a, a
   0035 F5            [11]  107 	push	af
   0036 33            [ 6]  108 	inc	sp
   0037 CDr00r00      [17]  109 	call	_cpct_etm_drawTileBox2x4
   003A C9            [10]  110 	ret
                            111 ;src/game.c:37: void updateUser(){
                            112 ;	---------------------------------
                            113 ; Function updateUser
                            114 ; ---------------------------------
   003B                     115 _updateUser::
                            116 ;src/game.c:39: cpct_scanKeyboard_if();
   003B CDr00r00      [17]  117 	call	_cpct_scanKeyboard_if
                            118 ;src/game.c:40: if(cpct_isAnyKeyPressed()){
   003E CDr00r00      [17]  119 	call	_cpct_isAnyKeyPressed
   0041 7D            [ 4]  120 	ld	a,l
   0042 B7            [ 4]  121 	or	a, a
   0043 C8            [11]  122 	ret	Z
                            123 ;src/game.c:41: if(cpct_isKeyPressed(Key_CursorUp)){
   0044 21 00 01      [10]  124 	ld	hl,#0x0100
   0047 CDr00r00      [17]  125 	call	_cpct_isKeyPressed
   004A 7D            [ 4]  126 	ld	a,l
   004B B7            [ 4]  127 	or	a, a
   004C 28 0E         [12]  128 	jr	Z,00110$
                            129 ;src/game.c:42: accion(&player, es_mover, d_up);
   004E 21 01 00      [10]  130 	ld	hl,#0x0001
   0051 E5            [11]  131 	push	hl
   0052 21r1Dr00      [10]  132 	ld	hl,#_player
   0055 E5            [11]  133 	push	hl
   0056 CDr00r00      [17]  134 	call	_accion
   0059 F1            [10]  135 	pop	af
   005A F1            [10]  136 	pop	af
   005B C9            [10]  137 	ret
   005C                     138 00110$:
                            139 ;src/game.c:43: }else if(cpct_isKeyPressed(Key_CursorDown)){
   005C 21 00 04      [10]  140 	ld	hl,#0x0400
   005F CDr00r00      [17]  141 	call	_cpct_isKeyPressed
   0062 7D            [ 4]  142 	ld	a,l
   0063 B7            [ 4]  143 	or	a, a
   0064 28 0E         [12]  144 	jr	Z,00107$
                            145 ;src/game.c:44: accion(&player, es_mover, d_down);
   0066 21 01 01      [10]  146 	ld	hl,#0x0101
   0069 E5            [11]  147 	push	hl
   006A 21r1Dr00      [10]  148 	ld	hl,#_player
   006D E5            [11]  149 	push	hl
   006E CDr00r00      [17]  150 	call	_accion
   0071 F1            [10]  151 	pop	af
   0072 F1            [10]  152 	pop	af
   0073 C9            [10]  153 	ret
   0074                     154 00107$:
                            155 ;src/game.c:45: }else if(cpct_isKeyPressed(Key_CursorRight)){
   0074 21 00 02      [10]  156 	ld	hl,#0x0200
   0077 CDr00r00      [17]  157 	call	_cpct_isKeyPressed
   007A 7D            [ 4]  158 	ld	a,l
   007B B7            [ 4]  159 	or	a, a
   007C 28 0E         [12]  160 	jr	Z,00104$
                            161 ;src/game.c:46: accion(&player,es_mover,d_right);
   007E 21 01 02      [10]  162 	ld	hl,#0x0201
   0081 E5            [11]  163 	push	hl
   0082 21r1Dr00      [10]  164 	ld	hl,#_player
   0085 E5            [11]  165 	push	hl
   0086 CDr00r00      [17]  166 	call	_accion
   0089 F1            [10]  167 	pop	af
   008A F1            [10]  168 	pop	af
   008B C9            [10]  169 	ret
   008C                     170 00104$:
                            171 ;src/game.c:47: }else if(cpct_isKeyPressed(Key_CursorLeft)){
   008C 21 01 01      [10]  172 	ld	hl,#0x0101
   008F CDr00r00      [17]  173 	call	_cpct_isKeyPressed
   0092 7D            [ 4]  174 	ld	a,l
   0093 B7            [ 4]  175 	or	a, a
   0094 C8            [11]  176 	ret	Z
                            177 ;src/game.c:48: accion(&player,es_mover,d_left);
   0095 21 01 03      [10]  178 	ld	hl,#0x0301
   0098 E5            [11]  179 	push	hl
   0099 21r1Dr00      [10]  180 	ld	hl,#_player
   009C E5            [11]  181 	push	hl
   009D CDr00r00      [17]  182 	call	_accion
   00A0 F1            [10]  183 	pop	af
   00A1 F1            [10]  184 	pop	af
   00A2 C9            [10]  185 	ret
                            186 ;src/game.c:56: void play(){
                            187 ;	---------------------------------
                            188 ; Function play
                            189 ; ---------------------------------
   00A3                     190 _play::
   00A3 DD E5         [15]  191 	push	ix
   00A5 DD 21 00 00   [14]  192 	ld	ix,#0
   00A9 DD 39         [15]  193 	add	ix,sp
   00AB 3B            [ 6]  194 	dec	sp
                            195 ;src/game.c:58: u8 alive = 1;
   00AC DD 36 FF 01   [19]  196 	ld	-1 (ix),#0x01
                            197 ;src/game.c:60: inicializarPantalla();
   00B0 CDr00r00      [17]  198 	call	_inicializarPantalla
                            199 ;src/game.c:61: incializarEntities();
   00B3 CDr00r00      [17]  200 	call	_incializarEntities
                            201 ;src/game.c:64: while(alive){
   00B6                     202 00101$:
   00B6 DD 7E FF      [19]  203 	ld	a,-1 (ix)
   00B9 B7            [ 4]  204 	or	a, a
   00BA 28 1B         [12]  205 	jr	Z,00104$
                            206 ;src/game.c:65: updateUser();	
   00BC CDr3Br00      [17]  207 	call	_updateUser
                            208 ;src/game.c:66: alive = updatePlayer(&player);
   00BF 21r1Dr00      [10]  209 	ld	hl,#_player
   00C2 E5            [11]  210 	push	hl
   00C3 CDr00r00      [17]  211 	call	_updatePlayer
   00C6 F1            [10]  212 	pop	af
   00C7 DD 75 FF      [19]  213 	ld	-1 (ix),l
                            214 ;src/game.c:68: cpct_waitVSYNC();
   00CA CDr00r00      [17]  215 	call	_cpct_waitVSYNC
                            216 ;src/game.c:69: drawAll(&player);
   00CD 21r1Dr00      [10]  217 	ld	hl,#_player
   00D0 E5            [11]  218 	push	hl
   00D1 CDr00r00      [17]  219 	call	_drawAll
   00D4 F1            [10]  220 	pop	af
   00D5 18 DF         [12]  221 	jr	00101$
   00D7                     222 00104$:
   00D7 33            [ 6]  223 	inc	sp
   00D8 DD E1         [14]  224 	pop	ix
   00DA C9            [10]  225 	ret
                            226 	.area _CODE
                            227 	.area _INITIALIZER
   0000                     228 __xinit__mapa:
   0000 00 00               229 	.dw #0x0000
                            230 	.area _CABS (ABS)
